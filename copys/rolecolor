import settings
import math
import random
import discord
from discord.ext import commands
import discord.utils 
import asyncio
from discord import app_commands
from datetime import timedelta
import datetime
import colour
import webcolors

class rolecolor_command(commands.GroupCog, name="role"):
    def __init__(self, bot):
        self.bot = bot
        self._last_member = None

    @commands.has_permissions(manage_roles = True)
    @app_commands.command(
    )
    async def role_color_command(self, interaction:discord.Interaction, role: discord.Role, color: str or int):
        try:
            if isinstance(color, str):
                try:
                    hex_color = webcolors.name_to_hex(color)
                except ValueError:
                    hex_color = colour.Color(color).hex_l
                new_color = discord.Color(int(hex_color.lstrip("#"), 16))
            elif isinstance(color, int):
                new_color = discord.Color(color)
            else:
                raise ValueError
            await role.edit(color=new_color)
            embed = discord.Embed(description = f"✔️ Updated {role.name} color to {color}", color = discord.Color.purple())
            await interaction.response.send_message(embed=embed)
        except ValueError:
            embed = discord.Embed(description="❌ Please enter a vaild color format", color=discord.Color.purple())
            await interaction.response.send_message(embed=embed)
        except Exception:
            embed = discord.Embed(description="❌ Please Enter a vaild color", color=discord.Color.purple())
            await interaction.response.send_message(embed=embed)






async def setup(bot):
    await bot.add_cog(rolecolor_command(bot))
